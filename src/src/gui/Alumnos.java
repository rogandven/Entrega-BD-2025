/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import database.Database;
import java.util.ArrayList;
import java.util.Arrays;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Roger
 */
public class Alumnos extends javax.swing.JPanel {

    /**
     * Creates new form alumnos
     */
    public Alumnos() {
        initComponents();
        
        this.getCmbAlumno().addActionListener(e -> {
            this.actualizarCampos(false);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelAlumno = new javax.swing.JLabel();
        cmbAlumno = new javax.swing.JComboBox<>();
        txtNombres = new javax.swing.JTextField();
        labelNombres = new javax.swing.JLabel();
        txtApellidoPaterno = new javax.swing.JTextField();
        labelApellidoPaterno = new javax.swing.JLabel();
        txtApellidoMaterno = new javax.swing.JTextField();
        labelApellidoMaterno = new javax.swing.JLabel();
        labelFechaNacimiento = new javax.swing.JLabel();
        txtFechaNacimiento = new javax.swing.JTextField();
        labelDireccion = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        labelCiudad = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        labelCurso = new javax.swing.JLabel();
        cmbCurso = new javax.swing.JComboBox<>();
        labelApoderados = new javax.swing.JLabel();
        tablaApoderadosContainer = new javax.swing.JScrollPane();
        tablaApoderados = new javax.swing.JTable();
        btnCrearAlumno = new javax.swing.JButton();
        btnModificarAlumno = new javax.swing.JButton();
        btnEliminarAlumno = new javax.swing.JButton();
        cmbApoderado = new javax.swing.JComboBox<>();
        labelApoderado = new javax.swing.JLabel();
        btnAgregarApoderado = new javax.swing.JButton();
        btnEliminarApoderado = new javax.swing.JButton();
        labelFechaInicio = new javax.swing.JLabel();
        txtFechaInicio = new javax.swing.JTextField();
        txtFechaTermino = new javax.swing.JTextField();
        labelFechaTermino = new javax.swing.JLabel();

        labelAlumno.setText("Alumno:");

        labelNombres.setText("Nombres:");

        labelApellidoPaterno.setText("Apellido P:");

        labelApellidoMaterno.setText("Apellido M:");

        labelFechaNacimiento.setText("Fecha N:");

        labelDireccion.setText("Dirección:");

        labelCiudad.setText("Ciudad:");

        labelCurso.setText("Curso:");

        labelApoderados.setText("Apoderados:");

        tablaApoderados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Rut", "Nombre", "Fecha Inicio", "Fecha Término"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaApoderados.setShowGrid(false);
        tablaApoderados.getTableHeader().setReorderingAllowed(false);
        tablaApoderadosContainer.setViewportView(tablaApoderados);
        if (tablaApoderados.getColumnModel().getColumnCount() > 0) {
            tablaApoderados.getColumnModel().getColumn(0).setResizable(false);
            tablaApoderados.getColumnModel().getColumn(1).setResizable(false);
        }

        btnCrearAlumno.setText("Crear Alumno");
        btnCrearAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearAlumnoActionPerformed(evt);
            }
        });

        btnModificarAlumno.setText("Modificar Alumno");
        btnModificarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarAlumnoActionPerformed(evt);
            }
        });

        btnEliminarAlumno.setText("Eliminar Alumno");
        btnEliminarAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAlumnoActionPerformed(evt);
            }
        });

        labelApoderado.setText("Apoderado:");

        btnAgregarApoderado.setText("Agregar Apoderado");
        btnAgregarApoderado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarApoderadoActionPerformed(evt);
            }
        });

        btnEliminarApoderado.setText("Eliminar Apoderado");
        btnEliminarApoderado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarApoderadoActionPerformed(evt);
            }
        });

        labelFechaInicio.setText("Fecha Inicio:");

        labelFechaTermino.setText("Fecha Término:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelApoderados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelAlumno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbAlumno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelNombres)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombres))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(labelApellidoPaterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApellidoPaterno))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelApellidoMaterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApellidoMaterno))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDireccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDireccion))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelCiudad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCiudad))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelCurso)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbCurso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(tablaApoderadosContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCrearAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEliminarAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelApoderado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbApoderado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(labelFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnAgregarApoderado, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminarApoderado, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelFechaInicio)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFechaInicio))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelFechaTermino)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFechaTermino)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbAlumno)
                    .addComponent(labelAlumno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelApellidoPaterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelApellidoMaterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtFechaNacimiento)
                    .addComponent(labelFechaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCiudad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCiudad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbCurso))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearAlumno)
                    .addComponent(btnModificarAlumno)
                    .addComponent(btnEliminarAlumno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelApoderados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tablaApoderadosContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelApoderado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbApoderado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFechaInicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFechaInicio))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFechaTermino, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtFechaTermino))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarApoderado)
                    .addComponent(btnEliminarApoderado)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearAlumnoActionPerformed

        this.getDatabase().doSendingQuery(this.getQueryCrearAlumno());
        this.doQueries();
        this.actualizarCampos(true);
        this.showSimplifiedDialog("Alumno ingresado con éxito!", "Éxito");
        
    }//GEN-LAST:event_btnCrearAlumnoActionPerformed

    private void btnModificarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarAlumnoActionPerformed
        
        this.getDatabase().doSendingQuery(this.getQueryModificarAlumno());
        this.doQueries();
        this.actualizarCampos(true);
        this.showSimplifiedDialog("Alumno modificado con éxito!", "Éxito");

    }//GEN-LAST:event_btnModificarAlumnoActionPerformed

    private void btnEliminarAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAlumnoActionPerformed
        this.getDatabase().doSendingQuery(this.getQueryEliminarAlumno());
        this.doQueries();
        this.actualizarCampos(true);
        this.showSimplifiedDialog("Alumno eliminado con éxito!", "Éxito");
    }//GEN-LAST:event_btnEliminarAlumnoActionPerformed

    private void btnAgregarApoderadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarApoderadoActionPerformed
        // TODO add your handling code here:
        this.getDatabase().doSendingQuery(this.getQueryAgregarApoderado());
        this.doQueries();
        this.actualizarCampos(true);
        this.showSimplifiedDialog("Apoderado agregado con éxito!", "Éxito");
    }//GEN-LAST:event_btnAgregarApoderadoActionPerformed

    private void btnEliminarApoderadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarApoderadoActionPerformed
        // TODO add your handling code here:
        this.getDatabase().doSendingQuery(this.getQueryEliminarAlumno());
        this.doQueries();
        this.actualizarCampos(true);
        this.showSimplifiedDialog("Apoderado eliminado con éxito!", "Éxito");
    }//GEN-LAST:event_btnEliminarApoderadoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarApoderado;
    private javax.swing.JButton btnCrearAlumno;
    private javax.swing.JButton btnEliminarAlumno;
    private javax.swing.JButton btnEliminarApoderado;
    private javax.swing.JButton btnModificarAlumno;
    private javax.swing.JComboBox<String> cmbAlumno;
    private javax.swing.JComboBox<String> cmbApoderado;
    private javax.swing.JComboBox<String> cmbCurso;
    private javax.swing.JLabel labelAlumno;
    private javax.swing.JLabel labelApellidoMaterno;
    private javax.swing.JLabel labelApellidoPaterno;
    private javax.swing.JLabel labelApoderado;
    private javax.swing.JLabel labelApoderados;
    private javax.swing.JLabel labelCiudad;
    private javax.swing.JLabel labelCurso;
    private javax.swing.JLabel labelDireccion;
    private javax.swing.JLabel labelFechaInicio;
    private javax.swing.JLabel labelFechaNacimiento;
    private javax.swing.JLabel labelFechaTermino;
    private javax.swing.JLabel labelNombres;
    private javax.swing.JTable tablaApoderados;
    private javax.swing.JScrollPane tablaApoderadosContainer;
    private javax.swing.JTextField txtApellidoMaterno;
    private javax.swing.JTextField txtApellidoPaterno;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtFechaInicio;
    private javax.swing.JTextField txtFechaNacimiento;
    private javax.swing.JTextField txtFechaTermino;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables

    public JButton getBtnAgregarApoderado() {
        return btnAgregarApoderado;
    }

    public void setBtnAgregarApoderado(JButton btnAgregarApoderado) {
        this.btnAgregarApoderado = btnAgregarApoderado;
    }

    public JButton getBtnCrearAlumno() {
        return btnCrearAlumno;
    }

    public void setBtnCrearAlumno(JButton btnCrearAlumno) {
        this.btnCrearAlumno = btnCrearAlumno;
    }

    public JButton getBtnEliminarAlumno() {
        return btnEliminarAlumno;
    }

    public void setBtnEliminarAlumno(JButton btnEliminarAlumno) {
        this.btnEliminarAlumno = btnEliminarAlumno;
    }

    public JButton getBtnEliminarApoderado() {
        return btnEliminarApoderado;
    }

    public void setBtnEliminarApoderado(JButton btnEliminarApoderado) {
        this.btnEliminarApoderado = btnEliminarApoderado;
    }

    public JButton getBtnModificarAlumno() {
        return btnModificarAlumno;
    }

    public void setBtnModificarAlumno(JButton btnModificarAlumno) {
        this.btnModificarAlumno = btnModificarAlumno;
    }

    public JComboBox<String> getCmbAlumno() {
        return cmbAlumno;
    }

    public void setCmbAlumno(JComboBox<String> cmbAlumno) {
        this.cmbAlumno = cmbAlumno;
    }

    public JComboBox<String> getCmbApoderado() {
        return cmbApoderado;
    }

    public void setCmbApoderado(JComboBox<String> cmbApoderado) {
        this.cmbApoderado = cmbApoderado;
    }

    public JComboBox<String> getCmbCurso() {
        return cmbCurso;
    }

    public void setCmbCurso(JComboBox<String> cmbCurso) {
        this.cmbCurso = cmbCurso;
    }

    public JLabel getLabelAlumno() {
        return labelAlumno;
    }

    public void setLabelAlumno(JLabel labelAlumno) {
        this.labelAlumno = labelAlumno;
    }

    public JLabel getLabelApellidoMaterno() {
        return labelApellidoMaterno;
    }

    public void setLabelApellidoMaterno(JLabel labelApellidoMaterno) {
        this.labelApellidoMaterno = labelApellidoMaterno;
    }

    public JLabel getLabelApellidoPaterno() {
        return labelApellidoPaterno;
    }

    public void setLabelApellidoPaterno(JLabel labelApellidoPaterno) {
        this.labelApellidoPaterno = labelApellidoPaterno;
    }

    public JLabel getLabelApoderado() {
        return labelApoderado;
    }

    public void setLabelApoderado(JLabel labelApoderado) {
        this.labelApoderado = labelApoderado;
    }

    public JLabel getLabelApoderados() {
        return labelApoderados;
    }

    public void setLabelApoderados(JLabel labelApoderados) {
        this.labelApoderados = labelApoderados;
    }

    public JLabel getLabelCiudad() {
        return labelCiudad;
    }

    public void setLabelCiudad(JLabel labelCiudad) {
        this.labelCiudad = labelCiudad;
    }

    public JLabel getLabelCurso() {
        return labelCurso;
    }

    public void setLabelCurso(JLabel labelCurso) {
        this.labelCurso = labelCurso;
    }

    public JLabel getLabelDireccion() {
        return labelDireccion;
    }

    public void setLabelDireccion(JLabel labelDireccion) {
        this.labelDireccion = labelDireccion;
    }

    public JLabel getLabelFechaInicio() {
        return labelFechaInicio;
    }

    public void setLabelFechaInicio(JLabel labelFechaInicio) {
        this.labelFechaInicio = labelFechaInicio;
    }

    public JLabel getLabelFechaNacimiento() {
        return labelFechaNacimiento;
    }

    public void setLabelFechaNacimiento(JLabel labelFechaNacimiento) {
        this.labelFechaNacimiento = labelFechaNacimiento;
    }

    public JLabel getLabelFechaTermino() {
        return labelFechaTermino;
    }

    public void setLabelFechaTermino(JLabel labelFechaTermino) {
        this.labelFechaTermino = labelFechaTermino;
    }

    public JLabel getLabelNombres() {
        return labelNombres;
    }

    public void setLabelNombres(JLabel labelNombres) {
        this.labelNombres = labelNombres;
    }

    public JTable getTablaApoderados() {
        return tablaApoderados;
    }

    public void setTablaApoderados(JTable tablaApoderados) {
        this.tablaApoderados = tablaApoderados;
    }

    public JScrollPane getTablaApoderadosContainer() {
        return tablaApoderadosContainer;
    }

    public void setTablaApoderadosContainer(JScrollPane tablaApoderadosContainer) {
        this.tablaApoderadosContainer = tablaApoderadosContainer;
    }

    public JTextField getTxtApellidoMaterno() {
        return txtApellidoMaterno;
    }

    public void setTxtApellidoMaterno(JTextField txtApellidoMaterno) {
        this.txtApellidoMaterno = txtApellidoMaterno;
    }

    public JTextField getTxtApellidoPaterno() {
        return txtApellidoPaterno;
    }

    public void setTxtApellidoPaterno(JTextField txtApellidoPaterno) {
        this.txtApellidoPaterno = txtApellidoPaterno;
    }

    public JTextField getTxtCiudad() {
        return txtCiudad;
    }

    public void setTxtCiudad(JTextField txtCiudad) {
        this.txtCiudad = txtCiudad;
    }

    public JTextField getTxtDireccion() {
        return txtDireccion;
    }

    public void setTxtDireccion(JTextField txtDireccion) {
        this.txtDireccion = txtDireccion;
    }

    public JTextField getTxtFechaInicio() {
        return txtFechaInicio;
    }

    public void setTxtFechaInicio(JTextField txtFechaInicio) {
        this.txtFechaInicio = txtFechaInicio;
    }

    public JTextField getTxtFechaNacimiento() {
        return txtFechaNacimiento;
    }

    public void setTxtFechaNacimiento(JTextField txtFechaNacimiento) {
        this.txtFechaNacimiento = txtFechaNacimiento;
    }

    public JTextField getTxtFechaTermino() {
        return txtFechaTermino;
    }

    public void setTxtFechaTermino(JTextField txtFechaTermino) {
        this.txtFechaTermino = txtFechaTermino;
    }

    public JTextField getTxtNombres() {
        return txtNombres;
    }

    public void setTxtNombres(JTextField txtNombres) {
        this.txtNombres = txtNombres;
    }

    public Database getDatabase() {
        return database;
    }

    public void setDatabase(Database database) {
        this.database = database;
    }

    public String[][] getDatosApoderados() {
        return datosApoderados;
    }

    public void setDatosApoderados(String[][] datosApoderados) {
        this.datosApoderados = datosApoderados;
    }
    
    private Database database;
    private String[][] datosAlumnos;
    private String[][] datosApoderados;
    private String[][] datosCursos;

    public String[][] getDatosCursos() {
        return datosCursos;
    }

    public void setDatosCursos(String[][] datosCursos) {
        this.datosCursos = datosCursos;
    }

    public String[][] getDatosAlumnos() {
        return datosAlumnos;
    }

    public void setDatosAlumnos(String[][] datosAlumnos) {
        this.datosAlumnos = datosAlumnos;
    }
    
    public String[] buscarPorRut(String rut) {
        for (String[] a : datosAlumnos) {
            if (a[0].equals(rut)) {
                return a;
            }
        }
        return null;
    }
    
    public void actualizarCmbAlumnos(String[] data) {
        ComboBoxModel<String> model = new DefaultComboBoxModel<String>(data);
        this.getCmbAlumno().setModel(model);
    }
    
    public void actualizarCmbApoderado(String[] data) {
        ComboBoxModel<String> model = new DefaultComboBoxModel<String>(data);
        this.getCmbApoderado().setModel(model);
    }
    
    public void actualizarCmbCurso(String[] data) {
        ComboBoxModel<String> model = new DefaultComboBoxModel<String>(data);
        this.getCmbCurso().setModel(model);
    }    
    
    public void actualizarTablaApoderados(String[][] data) {
        String[] enunciados = {"Rut", "Nombre", "Fecha Inicio", "Fecha Término", "Rut Alumno"};
        TableModel model = new DefaultTableModel(data, enunciados);
        this.getTablaApoderados().setModel(model);
    }
    
    public void actualizarCmbAlumnosConDatosGenerales() {
        ArrayList<String> al = new ArrayList<String>();
        for (String[] s: datosAlumnos) {
            al.add(s[ALUMNOS_RUT]);
        }
        
        this.actualizarCmbAlumnos(al.toArray(String[]::new));
    }
    
    public void actualizarCmbCursosConDatosGenerales() {
        ArrayList<String> al = new ArrayList<String>();
        for (String[] s: datosCursos) {
            al.add(s[CURSOS_CODIGO]);
        }
        
        this.actualizarCmbCurso(al.toArray(String[]::new));
    }
    
    public void actualizarCmbApoderadosConDatosGenerales() {
        ArrayList<String> al = new ArrayList<String>();
        for (String[] s : datosApoderados) {
            al.add(s[APODERADOS_RUT]);
            // System.out.println(Arrays.toString(s));
        }
        
        this.actualizarCmbApoderado(al.toArray(String[]::new));
    }
    
    public void actualizarTablaApoderadosConDatosGenerales() {
        Object temp = this.getCmbAlumno().getSelectedItem();
        String rutActual = "";
        if (temp != null) {
            rutActual = temp.toString();
        }
        temp = null;
        
        ArrayList<String[]> datosApoderadosFiltrados = new ArrayList<String[]>();
        for (String[] s : datosApoderados) {
            if (s[APODERADOS_RUT_ALUMNO] == null) {
                continue;
            }
            if (s[APODERADOS_RUT_ALUMNO].equals(rutActual)) {
                datosApoderadosFiltrados.add(s);
            }
        }
        String[][] datosFiltradosConvertidos = datosApoderadosFiltrados.toArray(String[][]::new);
        this.actualizarTablaApoderados(datosFiltradosConvertidos);
        datosFiltradosConvertidos = null;
        rutActual = null;
        datosApoderadosFiltrados = null;
    }
    
    public void actualizarCampos(Boolean actualizarCmbAlumnos) {
        if (actualizarCmbAlumnos != null && actualizarCmbAlumnos == true) {
            this.actualizarCmbAlumnosConDatosGenerales();
        }
        
        
        if (this.getCmbAlumno().getSelectedIndex() == -1) {
            this.getTxtNombres().setText("");
            this.getTxtApellidoMaterno().setText("");
            this.getTxtApellidoPaterno().setText("");
            this.getTxtFechaNacimiento().setText("");
            this.getTxtDireccion().setText("");
            this.getTxtCiudad().setText("");
            
            /*
            String[] emptyData = {};
            this.actualizarCmbCurso(emptyData);
            this.getCmbCurso().setSelectedIndex(-1);
            */

            String[][] emptyData2 = {{}};
            this.actualizarTablaApoderados(emptyData2);
            this.getCmbApoderado().setSelectedIndex(-1);
            
            /*
            this.actualizarCmbApoderado(emptyData);
            this.getCmbApoderado().setSelectedIndex(-1);
            */
            
            this.getTxtFechaInicio().setText("");
            this.getTxtFechaTermino().setText("");
        } else {
            String[] datos = buscarPorRut(this.getCmbAlumno().getSelectedItem().toString());
            
            this.getTxtNombres().setText(datos[ALUMNOS_NOMBRES]);
            this.getTxtApellidoMaterno().setText(datos[ALUMNOS_AM]);
            this.getTxtApellidoPaterno().setText(datos[ALUMNOS_AP]);
            this.getTxtFechaNacimiento().setText(datos[ALUMNOS_FECHA_NACIMIENTO]);
            this.getTxtDireccion().setText(datos[ALUMNOS_DIRECCION]);
            this.getTxtCiudad().setText(datos[ALUMNOS_CIUDAD]);
            this.getTxtFechaInicio().setText("");
            this.getTxtFechaTermino().setText("");
        }
        
        this.actualizarCmbCursosConDatosGenerales();
        this.actualizarTablaApoderadosConDatosGenerales();
        this.actualizarCmbApoderadosConDatosGenerales();
    }
    
    public String pedirRut() {
        return JOptionPane.showInputDialog(this, "Ingrese el RUT del alumno a ingresar:");
    }
    
    public void doQueries() {
        this.setDatosAlumnos(database.doReceivingQuery(GET_ALUMNOS_QUERY, 8));
        this.setDatosApoderados(database.doReceivingQuery(GET_APODERADOS_QUERY, 5));
        // System.out.println(Arrays.deepToString(this.getDatosApoderados()));
        this.setDatosCursos(database.doReceivingQuery(GET_CURSOS_QUERY, 2));
    }
    
    public String getQueryCrearAlumno() {
        return 
        """
               INSERT INTO alumno 
                (rut, 
                nombres, 
                apellido_paterno, 
                apellido_materno, 
                fecha_nacimiento, 
                direccion, ciudad, 
                codigo_curso
                ) VALUES ('""" + this.pedirRut().trim() + "', '" + 
              this.getTxtNombres().getText().trim() + "', '" + 
              this.getTxtApellidoPaterno().getText().trim() + "', '" +
              this.getTxtApellidoMaterno().getText().trim() + "', '" +
              this.getTxtFechaNacimiento().getText().trim() + "', '" +
              this.getTxtDireccion().getText().trim() + "','" +
              this.getTxtCiudad().getText().trim() + "', " +
              this.getCmbCurso().getSelectedItem().toString().trim() + ");";
    }
    
    public String getQueryModificarAlumno() {
        return "UPDATE alumno SET nombres = '" + this.getTxtNombres().getText().trim() +
               "', apellido_paterno = '" + this.getTxtNombres().getText().trim() +
               "', apellido_materno = '" + this.getTxtApellidoMaterno().getText().trim() +
               "', fecha_nacimiento = '" + this.getTxtFechaNacimiento().getText().trim() +
               "', direccion = '" + this.getTxtDireccion().getText().trim() +
               "', ciudad = '" + this.getTxtCiudad().getText().trim() +
               "', codigo_curso = " + this.getCmbCurso().getSelectedItem().toString().trim() + 
               " WHERE rut = '" + this.getCmbAlumno().getSelectedItem().toString().trim() + "';";
    }
    
    public String getQueryEliminarAlumno() {
        return "DELETE FROM alumno WHERE rut = '" + this.getCmbAlumno().getSelectedItem().toString().trim() + "';";
    }
    
    public String getQueryAgregarApoderado() {
        return "INSERT INTO representa (rut_alumno, rut_apoderado, fecha_inicio, fecha_termino) VALUES ('" + this.getCmbAlumno().getSelectedItem().toString().trim() + "', '" + this.getCmbApoderado().getSelectedItem().toString().trim() + "','" + this.getTxtFechaInicio().getText().trim() + "','" + this.getTxtFechaTermino().getText().trim() + "');";
    }
    
    public String getQueryEliminarApoderado() {
        return "DELETE FROM representa WHERE rut_alumno = '" + this.getCmbAlumno().getSelectedItem().toString().trim() + "' AND rut_apoderado = '" + this.getCmbApoderado().getSelectedItem().toString().trim() + "';";
    }
    
    public static final String GET_ALUMNOS_QUERY = "SELECT rut, nombres, apellido_paterno, apellido_materno, fecha_nacimiento, direccion, ciudad, codigo_curso FROM alumno;";
    public static final int ALUMNOS_RUT = 0;
    public static final int ALUMNOS_NOMBRES = 1;
    public static final int ALUMNOS_AP = 2;
    public static final int ALUMNOS_AM = 3;
    public static final int ALUMNOS_FECHA_NACIMIENTO = 4;
    public static final int ALUMNOS_DIRECCION = 5;
    public static final int ALUMNOS_CIUDAD = 6;
    public static final int ALUMNOS_CODIGO_CURSO = 7;
    
    public static final String GET_CURSOS_QUERY = "SELECT codigo, anio FROM curso;";
    public static final int CURSOS_CODIGO = 0;
    public static final int CURSOS_ANIO = 1;
    
    public static final String GET_APODERADOS_QUERY = "SELECT a.rut, a.nombres, r.fecha_inicio, r.fecha_termino, r.rut_alumno FROM apoderado a LEFT JOIN representa r ON a.rut = r.rut_apoderado;";
    public static final int APODERADOS_RUT = 0;
    public static final int APODERADOS_NOMBRE = 1;
    public static final int APODERADOS_FECHA_INICIO = 2;
    public static final int APODERADOS_FECHA_FIN = 3;
    public static final int APODERADOS_RUT_ALUMNO = 4;

    public static void showSimplifiedDialog(String error, String title) {
        JOptionPane.showMessageDialog(null, error, title, -1, null);
    }
}
