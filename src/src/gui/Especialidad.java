/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import database.Database;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Roger
 */
public class Especialidad extends javax.swing.JPanel {

    /**
     * Creates new form Apoderados
     */
    public Especialidad() {
        initComponents();
        this.getCmbEspecialidad().addActionListener(e -> {
            this.actualizarDatosActuales();
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelEspecialidad = new javax.swing.JLabel();
        cmbEspecialidad = new javax.swing.JComboBox<>();
        labelDescripcion = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        btnCrearEspecialidad = new javax.swing.JButton();
        btnModificarEspecialidad = new javax.swing.JButton();
        btnEliminarEspecialidad = new javax.swing.JButton();

        labelEspecialidad.setText("Especialidad:");

        labelDescripcion.setText("Descripción:");

        btnCrearEspecialidad.setText("Crear Especialidad");
        btnCrearEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearEspecialidadActionPerformed(evt);
            }
        });

        btnModificarEspecialidad.setText("Modificar Especialidad");
        btnModificarEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarEspecialidadActionPerformed(evt);
            }
        });

        btnEliminarEspecialidad.setText("Eliminar Especialidad");
        btnEliminarEspecialidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEspecialidadActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelEspecialidad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbEspecialidad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDescripcion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDescripcion))
                    .addComponent(btnEliminarEspecialidad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCrearEspecialidad, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbEspecialidad)
                    .addComponent(labelEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearEspecialidad)
                    .addComponent(btnModificarEspecialidad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarEspecialidad)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearEspecialidadActionPerformed
        // TODO add your handling code here:
        this.crearEspecialidad();
        this.obtenerDatos();
        this.actualizarTodosLosDatos();
        Especialidad.showSimplifiedDialog("¡Especialidad creada con éxito!", "¡Éxito!");
    }//GEN-LAST:event_btnCrearEspecialidadActionPerformed

    private void btnModificarEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarEspecialidadActionPerformed
        this.modificarEspecialidad();
        this.obtenerDatos();
        this.actualizarTodosLosDatos();
        Especialidad.showSimplifiedDialog("¡Especialidad modificada con éxito!", "¡Éxito!");
    }//GEN-LAST:event_btnModificarEspecialidadActionPerformed

    private void btnEliminarEspecialidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEspecialidadActionPerformed
        this.eliminarEspecialidad();
        this.obtenerDatos();
        this.actualizarTodosLosDatos();
        Especialidad.showSimplifiedDialog("¡Especialidad eliminada con éxito!", "¡Éxito!");
    }//GEN-LAST:event_btnEliminarEspecialidadActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearEspecialidad;
    private javax.swing.JButton btnEliminarEspecialidad;
    private javax.swing.JButton btnModificarEspecialidad;
    private javax.swing.JComboBox<String> cmbEspecialidad;
    private javax.swing.JLabel labelDescripcion;
    private javax.swing.JLabel labelEspecialidad;
    private javax.swing.JTextField txtDescripcion;
    // End of variables declaration//GEN-END:variables

    public JButton getBtnCrearEspecialidad() {
        return btnCrearEspecialidad;
    }

    public void setBtnCrearEspecialidad(JButton btnCrearEspecialidad) {
        this.btnCrearEspecialidad = btnCrearEspecialidad;
    }

    public JButton getBtnEliminarEspecialidad() {
        return btnEliminarEspecialidad;
    }

    public void setBtnEliminarEspecialidad(JButton btnEliminarEspecialidad) {
        this.btnEliminarEspecialidad = btnEliminarEspecialidad;
    }

    public JButton getBtnModificarEspecialidad() {
        return btnModificarEspecialidad;
    }

    public void setBtnModificarEspecialidad(JButton btnModificarEspecialidad) {
        this.btnModificarEspecialidad = btnModificarEspecialidad;
    }

    public JComboBox<String> getCmbEspecialidad() {
        return cmbEspecialidad;
    }

    public void setCmbEspecialidad(JComboBox<String> cmbEspecialidad) {
        this.cmbEspecialidad = cmbEspecialidad;
    }

    public JLabel getLabelDescripcion() {
        return labelDescripcion;
    }

    public void setLabelDescripcion(JLabel labelDescripcion) {
        this.labelDescripcion = labelDescripcion;
    }

    public JLabel getLabelEspecialidad() {
        return labelEspecialidad;
    }

    public void setLabelEspecialidad(JLabel labelEspecialidad) {
        this.labelEspecialidad = labelEspecialidad;
    }

    public JTextField getTxtDescripcion() {
        return txtDescripcion;
    }

    public void setTxtDescripcion(JTextField txtDescripcion) {
        this.txtDescripcion = txtDescripcion;
    }
    
    public String[][] getDatosEspecialidad() {
        return datosEspecialidad;
    }

    public void setDatosEspecialidad(String[][] datosEspecialidad) {
        this.datosEspecialidad = datosEspecialidad;
    }

    public Database getDatabase() {
        return database;
    }

    public void setDatabase(Database database) {
        this.database = database;
    }
    
    private String[][] datosEspecialidad;
    private Database database;
    
    
    public static final String GET_ESPECIALIDAD_QUERY = "SELECT codigo, descripcion FROM especialidad;";
    
    public static final int ESP_CODIGO = 0;
    public static final int ESP_DESCRIPCION = 1;
    
    public void obtenerDatos() {
        this.setDatosEspecialidad(database.doReceivingQuery(GET_ESPECIALIDAD_QUERY, 2));
    }
    
    public void actualizarCmbEspecialidad() {
        ArrayList<String> especialidades = new ArrayList<String>();
        for (String[] s : datosEspecialidad) {
            especialidades.add(s[ESP_CODIGO]);
        }
        this.getCmbEspecialidad().setModel(new DefaultComboBoxModel(especialidades.toArray()));
        
        if (!especialidades.isEmpty()) {
            this.getCmbEspecialidad().setSelectedIndex(0);
        } else {
            this.getCmbEspecialidad().setSelectedIndex(-1);
        }
    }
    
    public String[] buscarPorCodigo(String codigo) {
        if (codigo == null) {
            return null;
        }
        for (String[] s : datosEspecialidad) {
            if (s[ESP_CODIGO].equals(codigo)) {
                return s;
            }
        }
        return null;
    }
    
    public void actualizarDatosActuales() {
        Object item = this.getCmbEspecialidad().getSelectedItem();
        if (item != null) {
            item = item.toString();
        }
        
        String[] datos = buscarPorCodigo((String)item);
        if (datos != null) {
            this.getTxtDescripcion().setText(datos[ESP_DESCRIPCION]);
        } else {
            this.getTxtDescripcion().setText("");
        }
    }
    
    public void actualizarTodosLosDatos() {
        this.actualizarCmbEspecialidad();
        this.actualizarDatosActuales();
    }
    
    public void crearEspecialidad() {
        Integer codigo = this.pedirCodigo();
        String query = "INSERT INTO especialidad (codigo, descripcion) VALUES (" + codigo.toString() + ", '" + this.getTxtDescripcion().getText() + "');";
        database.doSendingQuery(query);
    }
    
    public void modificarEspecialidad() {
        String codigo = Integer.valueOf(this.getCmbEspecialidad().getSelectedItem().toString()).toString();
        String query = "UPDATE especialidad SET descripcion = '" + this.getTxtDescripcion().getText() + "' WHERE codigo = " + codigo + ";";
        database.doSendingQuery(query);
    }
    
    public void eliminarEspecialidad() {
        String codigo = Integer.valueOf(this.getCmbEspecialidad().getSelectedItem().toString()).toString();
        String query = "DELETE FROM especialidad WHERE codigo = " + codigo + ";";
        database.doSendingQuery(query);
    }
    
    public Integer pedirCodigo() {
        return Integer.valueOf(JOptionPane.showInputDialog(this, "Ingrese el código de la especialidad a ingresar:"));
    }
    
    public static void showSimplifiedDialog(String error, String title) {
        JOptionPane.showMessageDialog(null, error, title, -1, null);
    }
    
    
}
