/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import database.Database;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Roger
 */
public class Apoderados extends javax.swing.JPanel {
    
    /**
     * Creates new form Apoderados
     */
    public Apoderados() {
        initComponents();
        this.getCmbApoderado().addActionListener(e -> {
            actualizarCamposActuales();
        });
    }
    
    public String pedirRut() {
        return JOptionPane.showInputDialog(this, "Ingrese el RUT del apoderado a ingresar:");
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelApoderado = new javax.swing.JLabel();
        cmbApoderado = new javax.swing.JComboBox<>();
        labelNombres = new javax.swing.JLabel();
        txtNombres = new javax.swing.JTextField();
        labelApellidoPaterno = new javax.swing.JLabel();
        txtApellidoPaterno = new javax.swing.JTextField();
        labelApellidoMaterno = new javax.swing.JLabel();
        txtApellidoMaterno = new javax.swing.JTextField();
        labelDireccion = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        labelCiudad = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        btnCrearApoderado = new javax.swing.JButton();
        btnModificarApoderado = new javax.swing.JButton();
        btnEliminarApoderado = new javax.swing.JButton();

        labelApoderado.setText("Apoderado:");

        labelNombres.setText("Nombres:");

        labelApellidoPaterno.setText("Apellido P:");

        labelApellidoMaterno.setText("Apellido M:");

        labelDireccion.setText("Dirección:");

        labelCiudad.setText("Ciudad:");

        btnCrearApoderado.setText("Crear Apoderado");
        btnCrearApoderado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearApoderadoActionPerformed(evt);
            }
        });

        btnModificarApoderado.setText("Modificar Apoderado");
        btnModificarApoderado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarApoderadoActionPerformed(evt);
            }
        });

        btnEliminarApoderado.setText("Eliminar Apoderado");
        btnEliminarApoderado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarApoderadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelApoderado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbApoderado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelNombres)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombres))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(labelApellidoPaterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApellidoPaterno))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelApellidoMaterno)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtApellidoMaterno))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelDireccion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDireccion))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelCiudad)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCiudad))
                    .addComponent(btnEliminarApoderado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnCrearApoderado, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnModificarApoderado, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmbApoderado)
                    .addComponent(labelApoderado, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNombres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelApellidoPaterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtApellidoPaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelApellidoMaterno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtApellidoMaterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDireccion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCiudad, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtCiudad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearApoderado)
                    .addComponent(btnModificarApoderado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarApoderado)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearApoderadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearApoderadoActionPerformed
        // TODO add your handling code here:
        this.getDatabase().doSendingQuery(this.getQueryCrearApoderado());
        this.obtenerDatos();
        this.actualizarTodosLosCampos();
        this.showSimplifiedDialog("Apoderado ingresado con éxito!", "Éxito");
    }//GEN-LAST:event_btnCrearApoderadoActionPerformed

    private void btnModificarApoderadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarApoderadoActionPerformed
        // TODO add your handling code here:
        // System.out.println(this.getQueryModificarApoderado());
        this.getDatabase().doSendingQuery(this.getQueryModificarApoderado());
        this.obtenerDatos();
        this.actualizarTodosLosCampos();
        this.showSimplifiedDialog("Apoderado modificado con éxito!", "Éxito");
    }//GEN-LAST:event_btnModificarApoderadoActionPerformed

    private void btnEliminarApoderadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarApoderadoActionPerformed
        // TODO add your handling code here:
        // System.out.println(this.getQueryEliminarApoderado());
        this.getDatabase().doSendingQuery(this.getQueryEliminarApoderado());
        this.obtenerDatos();
        this.actualizarTodosLosCampos();
        this.showSimplifiedDialog("Apoderado eliminado con éxito!", "Éxito");
    }//GEN-LAST:event_btnEliminarApoderadoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrearApoderado;
    private javax.swing.JButton btnEliminarApoderado;
    private javax.swing.JButton btnModificarApoderado;
    private javax.swing.JComboBox<String> cmbApoderado;
    private javax.swing.JLabel labelApellidoMaterno;
    private javax.swing.JLabel labelApellidoPaterno;
    private javax.swing.JLabel labelApoderado;
    private javax.swing.JLabel labelCiudad;
    private javax.swing.JLabel labelDireccion;
    private javax.swing.JLabel labelNombres;
    private javax.swing.JTextField txtApellidoMaterno;
    private javax.swing.JTextField txtApellidoPaterno;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables

    public JButton getBtnCrearApoderado() {
        return btnCrearApoderado;
    }

    public void setBtnCrearApoderado(JButton btnCrearApoderado) {
        this.btnCrearApoderado = btnCrearApoderado;
    }

    public JButton getBtnEliminarApoderado() {
        return btnEliminarApoderado;
    }

    public void setBtnEliminarApoderado(JButton btnEliminarApoderado) {
        this.btnEliminarApoderado = btnEliminarApoderado;
    }

    public JButton getBtnModificarApoderado() {
        return btnModificarApoderado;
    }

    public void setBtnModificarApoderado(JButton btnModificarApoderado) {
        this.btnModificarApoderado = btnModificarApoderado;
    }

    public JComboBox<String> getCmbApoderado() {
        return cmbApoderado;
    }

    public void setCmbApoderado(JComboBox<String> cmbApoderado) {
        this.cmbApoderado = cmbApoderado;
    }

    public JLabel getLabelApellidoMaterno() {
        return labelApellidoMaterno;
    }

    public void setLabelApellidoMaterno(JLabel labelApellidoMaterno) {
        this.labelApellidoMaterno = labelApellidoMaterno;
    }

    public JLabel getLabelApellidoPaterno() {
        return labelApellidoPaterno;
    }

    public void setLabelApellidoPaterno(JLabel labelApellidoPaterno) {
        this.labelApellidoPaterno = labelApellidoPaterno;
    }

    public JLabel getLabelApoderado() {
        return labelApoderado;
    }

    public void setLabelApoderado(JLabel labelApoderado) {
        this.labelApoderado = labelApoderado;
    }

    public JLabel getLabelCiudad() {
        return labelCiudad;
    }

    public void setLabelCiudad(JLabel labelCiudad) {
        this.labelCiudad = labelCiudad;
    }

    public JLabel getLabelDireccion() {
        return labelDireccion;
    }

    public void setLabelDireccion(JLabel labelDireccion) {
        this.labelDireccion = labelDireccion;
    }

    public JLabel getLabelNombres() {
        return labelNombres;
    }

    public void setLabelNombres(JLabel labelNombres) {
        this.labelNombres = labelNombres;
    }

    public JTextField getTxtApellidoMaterno() {
        return txtApellidoMaterno;
    }

    public void setTxtApellidoMaterno(JTextField txtApellidoMaterno) {
        this.txtApellidoMaterno = txtApellidoMaterno;
    }

    public JTextField getTxtApellidoPaterno() {
        return txtApellidoPaterno;
    }

    public void setTxtApellidoPaterno(JTextField txtApellidoPaterno) {
        this.txtApellidoPaterno = txtApellidoPaterno;
    }

    public JTextField getTxtCiudad() {
        return txtCiudad;
    }

    public void setTxtCiudad(JTextField txtCiudad) {
        this.txtCiudad = txtCiudad;
    }

    public JTextField getTxtDireccion() {
        return txtDireccion;
    }

    public void setTxtDireccion(JTextField txtDireccion) {
        this.txtDireccion = txtDireccion;
    }

    public JTextField getTxtNombres() {
        return txtNombres;
    }

    public void setTxtNombres(JTextField txtNombres) {
        this.txtNombres = txtNombres;
    }
    
    private Database database;
    private String[][] datosApoderados;

    public String[][] getDatosApoderados() {
        return datosApoderados;
    }

    public void setDatosApoderados(String[][] datosApoderados) {
        this.datosApoderados = datosApoderados;
    }

    public Database getDatabase() {
        return database;
    }

    public void setDatabase(Database database) {
        this.database = database;
    }
    
    public static final String GET_APODERADOS_QUERY = "SELECT rut, nombres, apellido_paterno, apellido_materno, direccion, ciudad FROM apoderado;";
    public static final int APODERADO_RUT = 0;
    public static final int APODERADO_NOMBRES = 1;
    public static final int APODERADO_AP = 2;
    public static final int APODERADO_AM = 3;
    public static final int APODERADO_DIRECCION = 4;
    public static final int APODERADO_CIUDAD = 5;
    
    public void obtenerDatos() {
        this.setDatosApoderados(database.doReceivingQuery(GET_APODERADOS_QUERY, 6));
    }
    
    public boolean isEmpty(String s) {
        return s == null || s.isEmpty();
    }
    
    
    public String[] buscarPorRut(String rut) {
        for (String[] s : datosApoderados) {
            if (rut.equals(s[APODERADO_RUT])) {
                return s;
            }
        }
        return null;
    }
    
    public void actualizarCamposActuales() {
        Object selectedItem = this.getCmbApoderado().getSelectedItem();
        
        
        if (selectedItem == null) {
            this.getTxtNombres().setText("");
            this.getTxtDireccion().setText("");
            this.getTxtCiudad().setText("");
            this.getTxtApellidoPaterno().setText("");
            this.getTxtApellidoMaterno().setText("");
        } else {
            String[] datosActuales = buscarPorRut(selectedItem.toString());
            if (datosActuales != null) {
                this.getTxtNombres().setText(datosActuales[APODERADO_NOMBRES]);
                this.getTxtDireccion().setText(datosActuales[APODERADO_DIRECCION]);
                this.getTxtCiudad().setText(datosActuales[APODERADO_CIUDAD]);
                this.getTxtApellidoMaterno().setText(datosActuales[APODERADO_AM]);
                this.getTxtApellidoPaterno().setText(datosActuales[APODERADO_AP]);
            } else {
                this.getTxtNombres().setText("");
                this.getTxtDireccion().setText("");
                this.getTxtCiudad().setText("");
                this.getTxtApellidoPaterno().setText("");
                this.getTxtApellidoMaterno().setText("");
            }
        }
    }
    
    public void actualizarCmbApoderado() {
        ArrayList<String> nombres = new ArrayList<>();
        
        for (String[] s : datosApoderados) {
            nombres.add(s[APODERADO_RUT]);
        }
        
        String[] temp = nombres.toArray(String[]::new);
        
        this.getCmbApoderado().setModel(new DefaultComboBoxModel<>(temp));
        
        if (temp.length != 0) {
            this.getCmbApoderado().setSelectedIndex(0);
        } else {
            this.getCmbApoderado().setSelectedIndex(-1);
        }
    }
    
    public void actualizarTodosLosCampos() {
        actualizarCmbApoderado();
        actualizarCamposActuales();
    }
    
    public String getQueryCrearApoderado() {
        return "INSERT INTO apoderado (rut, nombres, apellido_paterno, apellido_materno, direccion, ciudad) VALUES ('" + this.pedirRut().trim() + "', '" + this.getTxtNombres().getText().trim() + "', '" + this.getTxtApellidoPaterno().getText().trim() + "', '" + this.getTxtApellidoMaterno().getText().trim() + "', '" + this.getTxtDireccion().getText().trim() + "', '" + this.getTxtCiudad().getText().trim() + "');";
    }
    
    public static void showSimplifiedDialog(String error, String title) {
        JOptionPane.showMessageDialog(null, error, title, -1, null);
    }

    private String getQueryModificarApoderado() {
        return "UPDATE apoderado SET nombres = '" + this.getTxtNombres().getText().trim() + "', apellido_paterno = '" + this.getTxtApellidoPaterno().getText().trim() + "', apellido_materno = '" + this.getTxtApellidoMaterno().getText() + "', direccion = '" + this.getTxtDireccion().getText().trim() + "', ciudad = '" + this.getTxtCiudad().getText().trim() + "' WHERE rut = '" + this.getCmbApoderado().getSelectedItem().toString().trim() + "';";
    }

    private String getQueryEliminarApoderado() {
        return "DELETE FROM apoderado WHERE rut = '" + this.getCmbApoderado().getSelectedItem().toString().trim() + "';";
    }
}
