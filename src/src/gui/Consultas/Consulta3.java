/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui.Consultas;

import database.Database;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import validations.PrintableException;

/**
 *
 * @author Roger
 */
public class Consulta3 extends javax.swing.JPanel {

    /**
     * Creates new form Consulta1
     */
    public Consulta3() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tablaConsultaContainer = new javax.swing.JScrollPane();
        tablaConsulta = new javax.swing.JTable();

        tablaConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Apellido"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaConsulta.getTableHeader().setReorderingAllowed(false);
        tablaConsultaContainer.setViewportView(tablaConsulta);
        if (tablaConsulta.getColumnModel().getColumnCount() > 0) {
            tablaConsulta.getColumnModel().getColumn(0).setResizable(false);
            tablaConsulta.getColumnModel().getColumn(1).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tablaConsultaContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tablaConsultaContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable tablaConsulta;
    private javax.swing.JScrollPane tablaConsultaContainer;
    // End of variables declaration//GEN-END:variables

    public JTable getTablaConsulta() {
        return tablaConsulta;
    }

    public void setTablaConsulta(JTable tablaConsulta) {
        this.tablaConsulta = tablaConsulta;
    }

    public JScrollPane getTablaConsultaContainer() {
        return tablaConsultaContainer;
    }

    public void setTablaConsultaContainer(JScrollPane tablaConsultaContainer) {
        this.tablaConsultaContainer = tablaConsultaContainer;
    }

    public String[][] getDatosConsulta() {
        return datosConsulta;
    }

    public void setDatosConsulta(String[][] datosConsulta) {
        this.datosConsulta = datosConsulta;
    }

    public Database getDatabase() {
        return database;
    }

    public void setDatabase(Database database) {
        this.database = database;
    }
    
    private String[][] datosConsulta;
    private Database database;
    
    public static final String QUERY3 = "SELECT p.rut, p.nombres FROM profesor p JOIN es_jefe ej ON p.rut=ej.rut_profesor_jefe JOIN alumnosXcurso axc ON axc.codigo=ej.codigo_curso WHERE axc.cantidad = (SELECT MAX(axc2.cantidad) FROM alumnosXcurso axc2);";
    public static final int RUT = 0;
    public static final int NOMBRE = 1;
    public static final String[] ENUNCIADOS3 = {"Rut", "Nombre"};
    
    public void obtenerDatos() throws PrintableException {
        this.datosConsulta = this.database.doReceivingQuery(QUERY3, 2);
    }
    
    public void actualizarTabla() {
        this.getTablaConsulta().setModel(new DefaultTableModel(datosConsulta, ENUNCIADOS3));
    }  
}
